service: galleries

plugins:
  - serverless-offline

custom:
  originals: fallenstedt-photography-originals-${self:provider.stage}
  processed: fallenstedt-photography-portfolio
provider:
  name: aws
  stage: ${opt:stage}
  region: us-west-2
  runtime: nodejs10.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource: "arn:aws:s3:::${self:custom.processed}/"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:PutObject
        - s3:GetObject
      Resource: "arn:aws:s3:::${self:custom.processed}/*"
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource: "arn:aws:s3:::${self:custom.originals}/"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:PutObject
        - s3:GetObject
      Resource: "arn:aws:s3:::${self:custom.originals}/*"
  environment:
    ORIGINALS_S3: ${self:custom.originals}
    PROCESSED_S3: ${self:custom.processed}
    CLOUDFRONT: http://d308su1ezw5mrw.cloudfront.net

# resources:
#   Resources:
#     GalleriesOriginalPhotos:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: ${self:custom.processed}
#     GalleriesOriginalBucketPolicy:
#       Type: AWS::S3::BucketPolicy
#       DependsOn: GalleriesOriginalPhotos
#       Properties:
#         Bucket: !Ref GalleriesOriginalPhotos
#         PolicyDocument:
#           Statement:
#             - Action: s3:GetObject
#               Effect: Allow
#               Principal:
#                 AWS:
#                   - Fn::GetAtt: [ResizerLambdaFunction, Arn]
#               Resource: arn:aws:s3:::${self:custom.processed}/*

layers:
  galleryFinder:
    path: lib
    description: Contains s3 wrapper for lambda.

functions:
  galleries:
    handler: src/galleries.handler
    layers:
      - Ref: GalleryFinderLambdaLayer
    events:
      - http:
          path: /galleries
          method: get
          cors: true

  resizer:
    handler: src/resizer.handler
    layers:
      - Ref: GalleryFinderLambdaLayer
    events:
      - s3:
          bucket: ${self:custom.originals}
          event: s3:ObjectCreated:*
